2:I[5878,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","5878","static/chunks/5878-f84dc20828bf89ac.js","4531","static/chunks/app/(notes)/data-structures/array/page-9150a2f39b821a86.js"],"Image"]
4:I[3474,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","5878","static/chunks/5878-f84dc20828bf89ac.js","4531","static/chunks/app/(notes)/data-structures/array/page-9150a2f39b821a86.js"],"default"]
8:I[4707,[],""]
9:I[6423,[],""]
3:Tf2a,<span class="keyword">type</span> <span class="type">static_array</span><span class="punctuation">:</span>
    <span class="abstract-type">T</span><span class="operator">*</span>  head
    <span class="builtin">int</span> size
    <span class="builtin">int</span> capacity
    
    <span class="keyword">constructor</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">,</span> capacity<span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">=</span> <span class="number">0</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>capacity <span class="operator">=</span> capacity
        <span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">=</span> <span class="function">memory_allocate</span><span class="punctuation">(</span>capacity<span class="punctuation">,</span> size of <span class="abstract-type">T</span><span class="punctuation">)</span>

    <span class="keyword">destructor</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="function">memory_free</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head<span class="punctuation">)</span>

    <span class="keyword">method</span> <span class="function">append</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">,</span> item<span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="keyword">assert</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">&lt;</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>capacity
        <span class="operator">*</span><span class="punctuation">(</span>head <span class="operator">+</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="punctuation">)</span> <span class="operator">=</span> item
        <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="operator">+</span><span class="operator">+</span>
    
    <span class="keyword">method</span> <span class="keyword">delete</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="keyword">assert</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">&gt;</span> <span class="number">0</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="operator">-</span><span class="operator">-</span>
        
    <span class="keyword">operator</span> <span class="soft-keyword">self</span><span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">:</span>
        <span class="keyword">return</span> <span class="operator">*</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">+</span> index<span class="punctuation">)</span>
        
    <span class="keyword">operator</span> <span class="soft-keyword">self</span><span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">=</span> value<span class="punctuation">:</span>
        <span class="operator">*</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">+</span> index<span class="punctuation">)</span> <span class="operator">=</span> value5:T155d,<span class="keyword">type</span> <span class="type">dynamic_array</span><span class="punctuation">:</span>
    <span class="abstract-type">T</span><span class="operator">*</span>  head
    <span class="builtin">int</span> size
    <span class="builtin">int</span> capacity
    
    <span class="keyword">constructor</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">,</span> <span class="builtin">int</span> capacity<span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">=</span> <span class="number">0</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>capacity <span class="operator">=</span> capacity
        <span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">=</span> <span class="function">memory_allocate</span><span class="punctuation">(</span>capacity<span class="punctuation">)</span>

    <span class="keyword">destructor</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="function">memory_free</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head<span class="punctuation">)</span>

    <span class="keyword">method</span> <span class="function">resize</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">,</span> <span class="builtin">int</span> capacity<span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">=</span> <span class="function">memory_reallocate</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head<span class="punctuation">,</span> capacity<span class="punctuation">)</span>        
        <span class="soft-keyword">self</span><span class="punctuation">.</span>capacity <span class="operator">=</span> capacity

    <span class="keyword">method</span> <span class="function">append</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">,</span> item<span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="keyword">if</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">==</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>capacity<span class="punctuation">:</span>
            <span class="soft-keyword">self</span><span class="punctuation">.</span><span class="function">resize</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>capacity <span class="operator">*</span> <span class="number">2</span><span class="punctuation">)</span>

        <span class="operator">*</span><span class="punctuation">(</span>head <span class="operator">+</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="punctuation">)</span> <span class="operator">=</span> item
        <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="operator">+</span><span class="operator">+</span>
    
    <span class="keyword">method</span> <span class="keyword">delete</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">)</span><span class="punctuation">:</span>
        <span class="keyword">assert</span> <span class="soft-keyword">self</span><span class="punctuation">.</span>size <span class="operator">&gt;</span> <span class="number">0</span>
        
        <span class="keyword">if</span> size <span class="operator">*</span> <span class="number">4</span> <span class="operator">&lt;</span> capacity<span class="punctuation">:</span>
            <span class="soft-keyword">self</span><span class="punctuation">.</span><span class="function">resize</span><span class="punctuation">(</span>capacity <span class="operator">/</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">;</span>

        <span class="soft-keyword">self</span><span class="punctuation">.</span>size<span class="operator">-</span><span class="operator">-</span>
        
    <span class="keyword">operator</span> <span class="soft-keyword">self</span><span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">:</span>
        <span class="keyword">return</span> <span class="operator">*</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">+</span> index<span class="punctuation">)</span>
        
    <span class="keyword">operator</span> <span class="soft-keyword">self</span><span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">=</span> value<span class="punctuation">:</span>
        <span class="operator">*</span><span class="punctuation">(</span><span class="soft-keyword">self</span><span class="punctuation">.</span>head <span class="operator">+</span> index<span class="punctuation">)</span> <span class="operator">=</span> value6:T505,<span class="keyword">function</span> <span class="function">insert</span><span class="punctuation">(</span><span class="abstract-type">array</span> a<span class="punctuation">,</span> <span class="builtin">int</span> index<span class="punctuation">,</span> value<span class="punctuation">)</span><span class="punctuation">:</span>
    <span class="keyword">assert</span> a<span class="punctuation">.</span>size <span class="operator">&lt;</span> a<span class="punctuation">.</span>capacity
    
    <span class="keyword">for</span> i <span class="operator">=</span> a<span class="punctuation">.</span>size<span class="punctuation">,</span> i <span class="operator">&gt;</span> index<span class="punctuation">,</span> i<span class="operator">-</span><span class="operator">-</span><span class="punctuation">:</span>
        a<span class="punctuation">[</span>i<span class="punctuation">]</span> <span class="operator">=</span> a<span class="punctuation">[</span>i<span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span>
    
    a<span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">=</span> value
    a<span class="punctuation">.</span>size<span class="operator">+</span><span class="operator">+</span>7:T1820,<span class="keyword">typedef</span> <span class="builtin">int</span> T<span class="punctuation">;</span>

<span class="keyword">typedef</span> <span class="keyword">struct</span>
<span class="punctuation">{</span>
    T<span class="operator">*</span> head<span class="punctuation">;</span>
    <span class="builtin">int</span> size<span class="punctuation">;</span>
    <span class="builtin">int</span> capacity<span class="punctuation">;</span>
<span class="punctuation">}</span> dynamic_array<span class="punctuation">;</span>

dynamic_array <span class="function">constructor</span><span class="punctuation">(</span><span class="builtin">int</span> capacity<span class="punctuation">)</span>
<span class="punctuation">{</span>
    dynamic_array array <span class="operator">=</span> <span class="punctuation">{</span><span class="function">calloc</span><span class="punctuation">(</span>capacity<span class="punctuation">,</span> <span class="keyword">sizeof</span><span class="punctuation">(</span>T<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> capacity<span class="punctuation">}</span><span class="punctuation">;</span>
    <span class="keyword">return</span> array<span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">void</span> <span class="function">destructor</span><span class="punctuation">(</span>dynamic_array<span class="operator">*</span> array<span class="punctuation">)</span>
<span class="punctuation">{</span>
    <span class="function">free</span><span class="punctuation">(</span>array<span class="operator">-&gt;</span>head<span class="punctuation">)</span><span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">void</span> <span class="function">resize</span><span class="punctuation">(</span>dynamic_array<span class="operator">*</span> array<span class="punctuation">,</span> <span class="builtin">int</span> capacity<span class="punctuation">)</span>
<span class="punctuation">{</span>
    array<span class="operator">-&gt;</span>head <span class="operator">=</span> <span class="function">realloc</span><span class="punctuation">(</span>array<span class="operator">-&gt;</span>head<span class="punctuation">,</span> <span class="keyword">sizeof</span><span class="punctuation">(</span>T<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">;</span>
    array<span class="operator">-&gt;</span>capacity <span class="operator">=</span> capacity<span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">void</span> <span class="function">append</span><span class="punctuation">(</span>dynamic_array<span class="operator">*</span> array<span class="punctuation">,</span> T value<span class="punctuation">)</span>
<span class="punctuation">{</span>
    <span class="keyword">if</span> <span class="punctuation">(</span>array<span class="operator">-&gt;</span>size <span class="operator">==</span> array<span class="operator">-&gt;</span>capacity<span class="punctuation">)</span>
        <span class="function">resize</span><span class="punctuation">(</span>array<span class="punctuation">,</span> array<span class="operator">-&gt;</span>capacity <span class="operator">*</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">;</span>

    array<span class="operator">-&gt;</span>head<span class="punctuation">[</span>array<span class="operator">-&gt;</span>size<span class="punctuation">]</span> <span class="operator">=</span> value<span class="punctuation">;</span>
    array<span class="operator">-&gt;</span>size<span class="operator">++</span><span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">void</span> <span class="function">delete</span><span class="punctuation">(</span>dynamic_array<span class="operator">*</span> array<span class="punctuation">)</span>
<span class="punctuation">{</span>
    <span class="keyword">if</span> <span class="punctuation">(</span>array<span class="operator">-&gt;</span>size <span class="operator">==</span> <span class="number">0</span><span class="punctuation">)</span>
        <span class="keyword">return</span><span class="punctuation">;</span>
    
    <span class="keyword">if</span> <span class="punctuation">(</span>array<span class="operator">-&gt;</span>size <span class="operator">*</span> <span class="number">4</span> <span class="operator">&lt;</span> array<span class="operator">-&gt;</span>capacity<span class="punctuation">)</span>
        <span class="function">resize</span><span class="punctuation">(</span>array<span class="punctuation">,</span> array<span class="operator">-&gt;</span>capacity <span class="operator">/</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">;</span>

    array<span class="operator">-&gt;</span>size<span class="operator">--</span><span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">int</span> <span class="function">get</span><span class="punctuation">(</span>dynamic_array array<span class="punctuation">,</span> <span class="builtin">int</span> index<span class="punctuation">)</span>
<span class="punctuation">{</span>
    <span class="keyword">return</span> array<span class="punctuation">.</span>head<span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">;</span>
<span class="punctuation">}</span>

<span class="builtin">void</span> <span class="function">set</span><span class="punctuation">(</span>dynamic_array<span class="operator">*</span> array<span class="punctuation">,</span> <span class="builtin">int</span> index<span class="punctuation">,</span> T value<span class="punctuation">)</span>
<span class="punctuation">{</span>
    array<span class="operator">-&gt;</span>head<span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">=</span> value<span class="punctuation">;</span>
<span class="punctuation">}</span>a:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
b:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
c:{"display":"inline-block"}
d:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["OVDfjCgqjH7xCkuFKsDQs",[[["",{"children":["(notes)",{"children":["data-structures",{"children":["array",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(notes)",{"children":["data-structures",{"children":["array",{"children":["__PAGE__",{},[["$L1",[["$","div",null,{"className":"title","children":["$","h1",null,{"children":"Массив"}]}],["$","section",null,{"children":[["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Массив – непрерывный кусок памяти, хранящий в себе фиксированное число элементов одинакового типа. Каждый элемент массива имеет индекс – его порядковый номер."}],["$","p",null,{"children":"Для всех элементов выделяется одинаковое целое число байт, определяемое по типу."}],["$","p",null,{"children":["Для получения элемента типа ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"abstract-type\">T</span>"}}],false]}]," с индексом ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>"}}]," в массиве ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-undefined","dangerouslySetInnerHTML":{"__html":"a"}}],false]}]," нужно прочитать"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"punctuation\">(</span>size of <span class=\"abstract-type\">T</span><span class=\"punctuation\">)</span>"}}],false]}]," байт начиная с позиции ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"a <span class=\"operator\">+</span> i <span class=\"operator\">*</span> <span class=\"punctuation\">(</span>size of <span class=\"abstract-type\">T</span><span class=\"punctuation\">)</span>"}}],false]}],". При этом ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-undefined","dangerouslySetInnerHTML":{"__html":"a"}}],false]}]," является указателем на начало массива."]}],["$","div",null,{"className":"image","children":["$","$L2",null,{"src":"/_next/static/media/array.617cfb13.svg","width":386,"height":51,"alt":"$undefined"}]}],["$","p",null,{"children":["Вот пример хранения массива в памяти. Указатель на начало массива"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"a <span class=\"operator\">=</span> <span class=\"number\">0x8E53</span>"}}],false]}],", в массиве"," ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>"}}]," элементов. Если тип элементов"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-c","dangerouslySetInnerHTML":{"__html":"<span class=\"builtin\">short</span>"}}],false]}]," (каждый ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>"}}]," байта), то"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"a <span class=\"operator\">=</span> <span class=\"punctuation\">[</span><span class=\"number\">583</span><span class=\"punctuation\">,</span> <span class=\"number\">250</span><span class=\"punctuation\">,</span> <span class=\"number\">18</span><span class=\"punctuation\">,</span> <span class=\"number\">14146</span><span class=\"punctuation\">,</span> <span class=\"operator\">-</span><span class=\"number\">40</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">]</span>"}}],false]}],"."]}]]}],["$","div",null,{"className":"par","children":["$","p",null,{"children":["Получение значения из ячейки памяти и запись значения в ячейку по адресу выполняются за ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}]," времени. Поэтому доступ и изменение произвольных элементов выполняется за ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}]]}],["$","section",null,{"children":[["$","h1",null,{"children":"Статический массив"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Статический массив – массив, у которого привязанный к нему кусок памяти неизменен. Таким образом, размер массива тоже остается неизменным."}],["$","p",null,{"children":"Статические массивы должны знать свой размер на момент создания. Если массив объявлен статически (например, в глобальной области видимости или как статический атрибут), то он размещается в статической памяти. Локально объявленные массивы размещаются на стеке."}]]}],["$","h2",null,{"children":"Дополнительное пространство"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":["Можно заранее выделить некоторое количество памяти и постепенно ее заполнять. Таким образом длина может быть переменной, но она ни в коем случае не может превышать вместимость (то, сколько мы изначально выделили). Удаление с конца и вставка в конец здесь будут работать за ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}],["$","p",null,{"children":"Статический массив с возможностью ограниченного расширения реализовывается так"}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$3"}}],["$","$L4",null,{"text":"type static_array:\n    T*  head\n    int size\n    int capacity\n    \n    constructor(self, capacity):\n        self.size = 0\n        self.capacity = capacity\n        self.head = memory_allocate(capacity, size of T)\n\n    destructor(self):\n        memory_free(self.head)\n\n    method append(self, item):\n        assert self.size < self.capacity\n        *(head + self.size) = item\n        self.size++\n    \n    method delete(self):\n        assert self.size > 0\n        self.size--\n        \n    operator self[index]:\n        return *(self.head + index)\n        \n    operator self[index] = value:\n        *(self.head + index) = value"}]]}]]}],["$","section",null,{"children":[["$","h1",null,{"children":"Динамический массив"}],["$","section",null,{"children":[["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Динамический массив – массив, который может изменять свой размер в зависимости от количества элементов, которые в нем находятся."}],["$","p",null,{"children":["Кроме операции доступа и изменения произвольного элемента есть еще добавление элемента в конец и удаление элемента из конца, которые работают за амортизированное время ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]]}],["$","div",null,{"className":"par","children":["$","p",null,{"children":["В динамическом массиве 3 поля: указатель на первый элемент"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"operator\">*</span>head"}}],false]}]," (или статический массив), размер динамического массива ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-undefined","dangerouslySetInnerHTML":{"__html":"size"}}],false]}]," и его максимальная вместимость ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-undefined","dangerouslySetInnerHTML":{"__html":"capacity"}}],false]}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">type</span> <span class=\"type\">dynamic_array</span><span class=\"punctuation\">:</span>\n    <span class=\"abstract-type\">T</span><span class=\"operator\">*</span>  head\n    <span class=\"builtin\">int</span> size\n    <span class=\"builtin\">int</span> capacity"}}],["$","$L4",null,{"text":"type dynamic_array:\n    T*  head\n    int size\n    int capacity"}]]}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":["Когда внутренний статический массив полностью заполнен (когда"," ",["$","span",null,{"className":"code","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"size <span class=\"operator\">==</span> capacity"}}],false]}],"), его необходимо расширить – деаллоцировать и заново аллоцировать с большим размером памяти."]}],["$","p",null,{"children":["Для достижения амортизированного времени вставки ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}]," ","(с учетом расширения), увеличивать вместимость массива необходимо в какое-то константное количество раз."]}],["$","p",null,{"children":["Оптимальная константа увеличения равна ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>"}}]," (баланс между временем и памятью). Хотя, встречаются и другие реализации – в Java, например, эта константа равна ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1.5</mn></mrow><annotation encoding=\"application/x-tex\">1.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.5</span></span></span></span>"}}],"."]}]]}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":["Чтобы сэкономить память, можно уменьшать вместимость массива в эту же константу раз. Однако, для корректного амортизированного времени ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>"}}]," вставки и удаления, условие на уменьшение вместимости должно быть более сильным."]}],["$","p",null,{"children":["Например, вместимость массива можно уменьшить в ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>"}}]," ","раза, если его размер в ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>"}}]," раза меньше вместимости. Таким образом, если вставить, удалить, вставить, удалить элемент, массив изменит свою вместимость лишь один раз."]}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$5"}}],["$","$L4",null,{"text":"type dynamic_array:\n    T*  head\n    int size\n    int capacity\n    \n    constructor(self, int capacity):\n        self.size = 0\n        self.capacity = capacity\n        self.head = memory_allocate(capacity)\n\n    destructor(self):\n        memory_free(self.head)\n\n    method resize(self, int capacity):\n        self.head = memory_reallocate(self.head, capacity)        \n        self.capacity = capacity\n\n    method append(self, item):\n        if self.size == self.capacity:\n            self.resize(self.capacity * 2)\n\n        *(head + self.size) = item\n        self.size++\n    \n    method delete(self):\n        assert self.size > 0\n        \n        if size * 4 < capacity:\n            self.resize(capacity / 2);\n\n        self.size--\n        \n    operator self[index]:\n        return *(self.head + index)\n        \n    operator self[index] = value:\n        *(self.head + index) = value"}]]}]]}]]}],["$","section",null,{"children":[["$","h1",null,{"children":"Базовые операции"}],["$","div",null,{"className":"par","children":["$","p",null,{"children":[["$","span",null,{"className":"decl","children":"Вставка."}]," Если мы вставляем элемент не в конец массива, а в произвольное место, то остальные элементы придется сдвигать. Временная сложность этой операции ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$6"}}],["$","$L4",null,{"text":"function insert(array a, int index, value):\n    assert a.size < a.capacity\n    \n    for i = a.size, i > index, i--:\n        a[i] = a[i-1]\n    \n    a[index] = value\n    a.size++"}]]}],["$","div",null,{"className":"par","children":["$","p",null,{"children":[["$","span",null,{"className":"decl","children":"Удаление."}]," Удаление произвольного элемента, аналогично вставке, требует сдвига нескольких элементов. Временная сложность тоже ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">function</span> <span class=\"function\">remove</span><span class=\"punctuation\">(</span><span class=\"abstract-type\">array</span> a<span class=\"punctuation\">,</span> <span class=\"builtin\">int</span> index<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">assert</span> a<span class=\"punctuation\">.</span>size <span class=\"operator\">&gt;</span> <span class=\"number\">0</span>\n    \n    <span class=\"keyword\">for</span> i <span class=\"operator\">=</span> index<span class=\"punctuation\">,</span> i <span class=\"operator\">&lt;</span> a<span class=\"punctuation\">.</span>size<span class=\"punctuation\">:</span>\n        a<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span> <span class=\"operator\">=</span> a<span class=\"punctuation\">[</span>i<span class=\"operator\">+</span><span class=\"number\">1</span><span class=\"punctuation\">]</span>\n    \n    a<span class=\"punctuation\">.</span>size<span class=\"operator\">-</span><span class=\"operator\">-</span>"}}],["$","$L4",null,{"text":"function remove(array a, int index):\n    assert a.size > 0\n    \n    for i = index, i < a.size:\n        a[i] = a[i+1]\n    \n    a.size--"}]]}],["$","div",null,{"className":"par","children":["$","p",null,{"children":[["$","span",null,{"className":"decl","children":"Поиск."}]," Для поиска значения в массиве придется пройтись по всему массиву. Сложность ",["$","span",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">function</span> <span class=\"function\">find</span><span class=\"punctuation\">(</span><span class=\"abstract-type\">array</span> a<span class=\"punctuation\">,</span> value<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">for</span> x <span class=\"keyword\">with</span> index i <span class=\"keyword\">in</span> a<span class=\"punctuation\">:</span>\n        <span class=\"keyword\">if</span> x <span class=\"operator\">==</span> value<span class=\"punctuation\">:</span>\n            <span class=\"keyword\">return</span> i"}}],["$","$L4",null,{"text":"function find(array a, value):\n    for x with index i in a:\n        if x == value:\n            return i"}]]}]]}],["$","section",null,{"children":[["$","h1",null,{"children":"Реализация динамического массива"}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-c","dangerouslySetInnerHTML":{"__html":"$7"}}],["$","$L4",null,{"text":"typedef int T;\n\ntypedef struct\n{\n    T* head;\n    int size;\n    int capacity;\n} dynamic_array;\n\ndynamic_array constructor(int capacity)\n{\n    dynamic_array array = {calloc(capacity, sizeof(T)), 0, capacity};\n    return array;\n}\n\nvoid destructor(dynamic_array* array)\n{\n    free(array->head);\n}\n\nvoid resize(dynamic_array* array, int capacity)\n{\n    array->head = realloc(array->head, sizeof(T));\n    array->capacity = capacity;\n}\n\nvoid append(dynamic_array* array, T value)\n{\n    if (array->size == array->capacity)\n        resize(array, array->capacity * 2);\n\n    array->head[array->size] = value;\n    array->size++;\n}\n\nvoid delete(dynamic_array* array)\n{\n    if (array->size == 0)\n        return;\n    \n    if (array->size * 4 < array->capacity)\n        resize(array, array->capacity / 2);\n\n    array->size--;\n}\n\nint get(dynamic_array array, int index)\n{\n    return array.head[index];\n}\n\nvoid set(dynamic_array* array, int index, T value)\n{\n    array->head[index] = value;\n}"}]]}]]}]],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5bdf5dcd9043da1a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/cffc39addae3f57c.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/b1ef9917c41239b8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/fe2eed3e70b09d81.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/5ab5e3ef6d7c504c.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/66e2015fe6c63f65.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","6",{"rel":"stylesheet","href":"/_next/static/css/3489bc9f8c699f88.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","7",{"rel":"stylesheet","href":"/_next/static/css/224c6de4cde30e73.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children","data-structures","children","array","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children","data-structures","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a519598dee6f2717.css","precedence":"next","crossOrigin":"$undefined"}]],[["$","article",null,{"children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}],["$","div",null,{"style":{"height":"5rem"}}]]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/8a0af8f496d32450.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ru","children":["$","body",null,{"className":"__variable_8aafdc __variable_c80cc2","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$a","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$b","children":"404"}],["$","div",null,{"style":"$c","children":["$","h2",null,{"style":"$d","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]],null],null],["$Le",null]]]]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Массив"}],["$","meta","3",{"name":"description","content":"..."}],["$","link","4",{"rel":"icon","href":"/icon.svg?3bdfcaa020873225","type":"image/svg+xml","sizes":"any"}]]
1:null
