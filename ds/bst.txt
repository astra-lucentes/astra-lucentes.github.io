2:I[3474,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","5878","static/chunks/5878-f84dc20828bf89ac.js","2485","static/chunks/app/(notes)/ds/(searchers)/bst/page-03cd6e273284a4db.js"],"default"]
4:I[4707,[],""]
5:I[6423,[],""]
6:I[2972,["2972","static/chunks/2972-46c398a3f3c253df.js","6942","static/chunks/app/(notes)/layout-5e3a5ea0592c52ee.js"],""]
3:T4ea,<span class="keyword">function</span> <span class="function">search</span><span class="punctuation">(</span><span class="class-name">node</span> root<span class="punctuation">,</span> value<span class="punctuation">)</span><span class="punctuation">:</span>
    <span class="keyword">if</span> root <span class="operator">==</span> <span class="boolean">none</span> <span class="keyword">or</span> root<span class="punctuation">.</span>value <span class="operator">==</span> value<span class="punctuation">:</span>
        <span class="keyword">return</span> root
    
    <span class="keyword">if</span> value <span class="operator">&lt;</span> root<span class="punctuation">.</span>value<span class="punctuation">:</span>
        <span class="keyword">return</span> <span class="function">search</span><span class="punctuation">(</span>root<span class="punctuation">.</span>left<span class="punctuation">,</span> value<span class="punctuation">)</span>
    <span class="keyword">else</span><span class="punctuation">:</span>
        <span class="keyword">return</span> <span class="function">search</span><span class="punctuation">(</span>root<span class="punctuation">.</span>right<span class="punctuation">,</span> value<span class="punctuation">)</span>0:["5p-Id3P0IahyFYlO5L0l0",[[["",{"children":["(notes)",{"children":["ds",{"children":["(searchers)",{"children":["bst",{"children":["__PAGE__",{}]}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(notes)",{"children":["ds",{"children":["(searchers)",{"children":["bst",{"children":["__PAGE__",{},[["$L1",[["$","div",null,{"className":"title","children":["$","h1",null,{"children":"Бинарное дерево поиска"}]}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Бинарное дерево поиска (BST, binary search tree) – бинарное дерево, в котором у каждого узла все его левые дети его меньше, а все правые дети его больше."}],["$","p",null,{"children":["BST позволяет добавлять, изменять, удалять и искать элементы за время"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mtext>высота дерева</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\text{высота дерева})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord cyrillic_fallback\">высота</span><span class=\"mord\"> </span><span class=\"mord cyrillic_fallback\">дерева</span></span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}],["$","p",null,{"children":"Его можно построить на любом отношении частичного порядка. Это отношение порядка может быть задано не на самих данных, а на их ключах."}]]}],["$","h1",null,{"children":"Хранение"}],["$","div",null,{"className":"par","children":["$","p",null,{"children":"BST состоит из узлов (вершин), имеющих следующую структуру:"}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">struct</span> <span class=\"class-name\">node</span><span class=\"punctuation\">:</span>\n    <span class=\"abstract-type\">T</span> value\n    <span class=\"class-name\">node</span> left\n    <span class=\"class-name\">node</span> right"}}],["$","$L2",null,{"text":"struct node:\n    T value\n    node left\n    node right"}]]}],["$","h1",null,{"children":"Операции над деревом"}],["$","h2",null,{"children":"Поиск"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":["В BST можно очень просто и достаточно быстро, за время"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mtext>высота дерева</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\text{высота дерева})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord cyrillic_fallback\">высота</span><span class=\"mord\"> </span><span class=\"mord cyrillic_fallback\">дерева</span></span><span class=\"mclose\">)</span></span></span></span>"}}],", искать элементы."]}],["$","p",null,{"children":"Мы постоянно пользуемся упорядоченностью BST. Если искомый элемент меньше, чем корневой элемент, то мы продолжаем поиск в левом поддереве, если больше, то продолжаем поиск в правом поддереве, а если равен, то мы нашли элемент."}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$3"}}],["$","$L2",null,{"text":"function search(node root, value):\n    if root == none or root.value == value:\n        return root\n    \n    if value < root.value:\n        return search(root.left, value)\n    else:\n        return search(root.right, value)"}]]}],["$","div",null,{"className":"par","children":["$","p",null,{"children":"Рекурсию можно развернуть и написать более эффективный, итеративный поиск"}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">function</span> <span class=\"function\">search</span><span class=\"punctuation\">(</span><span class=\"class-name\">node</span> root<span class=\"punctuation\">,</span> value<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">while</span> root <span class=\"operator\">!=</span> <span class=\"boolean\">none</span> <span class=\"keyword\">and</span> root<span class=\"punctuation\">.</span>value <span class=\"operator\">!=</span> value<span class=\"punctuation\">:</span>\n        <span class=\"keyword\">if</span> value <span class=\"operator\">&lt;</span> root<span class=\"punctuation\">.</span>value<span class=\"punctuation\">:</span>\n            root <span class=\"operator\">=</span> root<span class=\"punctuation\">.</span>left\n        <span class=\"keyword\">else</span><span class=\"punctuation\">:</span>\n            root <span class=\"operator\">=</span> root<span class=\"punctuation\">.</span>right\n    \n    <span class=\"keyword\">return</span> root"}}],["$","$L2",null,{"text":"function search(node root, value):\n    while root != none and root.value != value:\n        if value < root.value:\n            root = root.left\n        else:\n            root = root.right\n    \n    return root"}]]}],["$","h2",null,{"children":"Поиск минимума и максимума"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Поскольку элементы левого поддерева меньше корня, самый левый узел дерева будет иметь минимальное значение. Аналогично, самый правый узел дерева имеет максимальное значение. Для поиска минимума и максимума достаточно постоянно двигаться влево или вправо."}],["$","p",null,{"children":["Время выполнения обоих операций"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mtext>высота дерева</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\text{высота дерева})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord cyrillic_fallback\">высота</span><span class=\"mord\"> </span><span class=\"mord cyrillic_fallback\">дерева</span></span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">function</span> <span class=\"function\">min</span><span class=\"punctuation\">(</span><span class=\"class-name\">node</span> root<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">while</span> root<span class=\"punctuation\">.</span>left <span class=\"operator\">!=</span> <span class=\"boolean\">none</span><span class=\"punctuation\">:</span>\n        root <span class=\"operator\">=</span> root<span class=\"punctuation\">.</span>left\n    <span class=\"keyword\">return</span> root"}}],["$","$L2",null,{"text":"function min(node root):\n    while root.left != none:\n        root = root.left\n    return root"}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">function</span> <span class=\"function\">max</span><span class=\"punctuation\">(</span><span class=\"class-name\">node</span> root<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">while</span> root<span class=\"punctuation\">.</span>right <span class=\"operator\">!=</span> <span class=\"boolean\">none</span><span class=\"punctuation\">:</span>\n        root <span class=\"operator\">=</span> root<span class=\"punctuation\">.</span>right\n    <span class=\"keyword\">return</span> root"}}],["$","$L2",null,{"text":"function max(node root):\n    while root.right != none:\n        root = root.right\n    return root"}]]}],["$","h1",null,{"children":"Обходы дерева"}],["$","h2",null,{"children":"Обход по порядку"}],["$","div",null,{"className":"par","children":["$","p",null,{"children":["Необходимо вывести все узлы BST в отсортированном порядке. Для этого, по свойству BST, необходимо обойти в отсортированном порядке левое от корня поддерево, затем пройти по корню, затем обойти в отсортированном порядке правое от корня поддерево. Временная сложность"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Theta(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">iterator</span> <span class=\"function\">inorder</span><span class=\"punctuation\">(</span><span class=\"class-name\">node</span> root<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">if</span> root <span class=\"operator\">==</span> <span class=\"boolean\">none</span><span class=\"punctuation\">:</span> \n        <span class=\"keyword\">stop</span>\n\n    <span class=\"keyword\">yield</span> <span class=\"keyword\">from</span> <span class=\"function\">inorder</span><span class=\"punctuation\">(</span>root<span class=\"punctuation\">.</span>left<span class=\"punctuation\">)</span>\n    <span class=\"keyword\">yield</span> root\n    <span class=\"keyword\">yield</span> <span class=\"keyword\">from</span> <span class=\"function\">inorder</span><span class=\"punctuation\">(</span>root<span class=\"punctuation\">.</span>right<span class=\"punctuation\">)</span>"}}],["$","$L2",null,{"text":"iterator inorder(node root):\n    if root == none: \n        stop\n\n    yield from inorder(root.left)\n    yield root\n    yield from inorder(root.right)"}]]}],["$","h2",null,{"children":"Прямой обход"}],["$","div",null,{"className":"par","children":["$","p",null,{"children":["Необходимо вывести все узлы BST в порядке: вершина, все левое поддерево, все правое поддерево. Временная сложность"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Theta(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"<span class=\"keyword\">iterator</span> <span class=\"function\">preorder</span><span class=\"punctuation\">(</span><span class=\"class-name\">node</span> root<span class=\"punctuation\">)</span><span class=\"punctuation\">:</span>\n    <span class=\"keyword\">if</span> root <span class=\"operator\">==</span> <span class=\"boolean\">none</span><span class=\"punctuation\">:</span> \n        <span class=\"keyword\">stop</span>\n\n    <span class=\"keyword\">yield</span> root\n    <span class=\"keyword\">yield</span> <span class=\"keyword\">from</span> <span class=\"function\">preorder</span><span class=\"punctuation\">(</span>root<span class=\"punctuation\">.</span>left<span class=\"punctuation\">)</span>\n    <span class=\"keyword\">yield</span> <span class=\"keyword\">from</span> <span class=\"function\">preorder</span><span class=\"punctuation\">(</span>root<span class=\"punctuation\">.</span>right<span class=\"punctuation\">)</span>"}}],["$","$L2",null,{"text":"iterator preorder(node root):\n    if root == none: \n        stop\n\n    yield root\n    yield from preorder(root.left)\n    yield from preorder(root.right)"}]]}]],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c7d54b6fa11d1a10.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/cffc39addae3f57c.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/b1ef9917c41239b8.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/fe2eed3e70b09d81.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/224c6de4cde30e73.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/cb1458b54209591a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","6",{"rel":"stylesheet","href":"/_next/static/css/a85cc6ffb2e23bf0.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","7",{"rel":"stylesheet","href":"/_next/static/css/e1fa1c63977e8d7a.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children","ds","children","(searchers)","children","bst","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children","ds","children","(searchers)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children","ds","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/07ddf3913eec176a.css","precedence":"next","crossOrigin":"$undefined"}]],[["$","article",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(notes)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}],["$","div",null,{"style":{"height":"5rem"}}]]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/74f523037e4c99c9.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ru","children":["$","body",null,{"className":"__variable_8aafdc __variable_42bd1a","children":[["$","header",null,{"children":[["$","img",null,{"src":"/icon.svg","alt":"","role":"presentation"}],["$","nav",null,{"children":[["$","$L6",null,{"className":"colorless","href":"/","children":"Главная"}],["$","$L6",null,{"className":"colorless","href":"/tasks","children":"Задачи"}]]}]]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"error404","children":[["$","h1",null,{"children":[["$","span",null,{"children":"4"}],["$","span",null,{"children":"0"}],["$","span",null,{"children":"4"}]]}],"Без паники! Вы просто попали на несуществующую страницу."]}],"notFoundStyles":[]}]]}]}]],null],null],["$L7",null]]]]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Бинарное дерево поиска"}],["$","meta","3",{"name":"description","content":"..."}],["$","link","4",{"rel":"icon","href":"/icon.svg?3bdfcaa020873225","type":"image/svg+xml","sizes":"any"}]]
1:null
