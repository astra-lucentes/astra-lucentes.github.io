2:I[1154,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","2251","static/chunks/app/tasks/k-merge/page-04fb7d276d9fee9b.js"],"Tabs"]
3:I[1154,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","2251","static/chunks/app/tasks/k-merge/page-04fb7d276d9fee9b.js"],"Tab"]
6:I[3474,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","2251","static/chunks/app/tasks/k-merge/page-04fb7d276d9fee9b.js"],"default"]
8:I[4707,[],""]
9:I[6423,[],""]
a:I[2972,["5501","static/chunks/c16f53c3-263c4e379e12b9c7.js","7096","static/chunks/7096-6d1c431b58ffd388.js","2972","static/chunks/2972-46c398a3f3c253df.js","7289","static/chunks/app/tasks/page-edd341c860d20b8f.js"],""]
4:T4f7,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mi>k</mi><mi>n</mi><mo>⋅</mo><mi>log</mi><mo>⁡</mo><mi>k</mi><mi>n</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo></mrow><annotation encoding="application/x-tex">O \bl(kn \cdot \log kn \br)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mord mathnormal">kn</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">kn</span><span class="mclose"><span class="delimsizing size1">)</span></span></span></span></span>5:T9ff,<span class="keyword">function</span> <span class="function">merge</span><span class="punctuation">(</span><span class="abstract-type">array</span><span class="punctuation">[</span><span class="abstract-type">array</span><span class="punctuation">]</span> arrays<span class="punctuation">)</span><span class="punctuation">:</span>
    <span class="abstract-type">array</span> result <span class="operator">=</span> <span class="punctuation">[</span><span class="punctuation">]</span>

    <span class="keyword">while</span> <span class="keyword">any</span> <span class="keyword">in</span> arrays <span class="operator">!=</span> <span class="boolean special-boolean">⌀</span><span class="punctuation">:</span>
        minimum<span class="punctuation">,</span> index <span class="operator">=</span> <span class="number special-number">∞</span><span class="punctuation">,</span> <span class="number">0</span>
        <span class="keyword">for</span> i <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> i <span class="operator">&lt;</span> length of arrays<span class="punctuation">:</span>
            <span class="keyword">if</span> arrays<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span> <span class="operator">&lt;</span> minimum<span class="punctuation">:</span>
                minimum<span class="punctuation">,</span> index <span class="operator">=</span> arrays<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">,</span> i
        
        result<span class="punctuation">.</span><span class="function">append</span><span class="punctuation">(</span>minimum<span class="punctuation">)</span>
        <span class="keyword">delete</span> arrays<span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span>
        
        <span class="keyword">if</span> arrays<span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">==</span> <span class="boolean special-boolean">⌀</span><span class="punctuation">:</span>
            <span class="keyword">delete</span> arrays<span class="punctuation">[</span>index<span class="punctuation">]</span>
            
    <span class="keyword">return</span> result7:T975,<span class="keyword">function</span> <span class="function">merge</span><span class="punctuation">(</span><span class="abstract-type">array</span><span class="punctuation">[</span><span class="abstract-type">array</span><span class="punctuation">]</span> arrays<span class="punctuation">)</span><span class="punctuation">:</span>
    <span class="abstract-type">array</span> result <span class="operator">=</span> <span class="punctuation">[</span><span class="punctuation">]</span>
    <span class="type">min_heap</span> to_compare <span class="operator">=</span> <span class="punctuation">[</span><span class="punctuation">(</span>a<span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">,</span> i<span class="punctuation">)</span> <span class="keyword">for</span> <span class="keyword">each</span> a <span class="keyword">with</span> index i <span class="keyword">in</span> arrays<span class="punctuation">]</span>
    
    <span class="keyword">while</span> to_compare <span class="operator">!=</span> <span class="boolean special-boolean">⌀</span><span class="punctuation">:</span>
        minimum<span class="punctuation">,</span> index <span class="operator">=</span> to_compare<span class="punctuation">.</span><span class="function">extract_min</span><span class="punctuation">(</span><span class="punctuation">)</span>
        
        result<span class="punctuation">.</span><span class="function">append</span><span class="punctuation">(</span>minimum<span class="punctuation">)</span>
        <span class="keyword">delete</span> arrays<span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span>

        <span class="keyword">if</span> arrays<span class="punctuation">[</span>index<span class="punctuation">]</span> <span class="operator">!=</span> <span class="boolean special-boolean">⌀</span><span class="punctuation">:</span>
            to_compare<span class="punctuation">.</span><span class="function">push</span><span class="punctuation">(</span>arrays<span class="punctuation">[</span>index<span class="punctuation">]</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">)</span>
            
    <span class="keyword">return</span> result0:["IGQDw3fMPiXuegUOcZF78",[[["",{"children":["tasks",{"children":["k-merge",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["tasks",{"children":["k-merge",{"children":["__PAGE__",{},[["$L1",[["$","div",null,{"className":"task-heading","children":[["$","h1",null,{"children":"Merge K sorted arrays"}],["$","p",null,{"children":["$","span",null,{"className":"difficulty medium","children":"Medium"}]}]]}],["$","div",null,{"className":"task","children":["$","$L2",null,{"ident":true,"children":[["$","$L3",null,{"title":[["$","svg",null,{"className":"icon","viewBox":"0 0 48 48","xmlns":"http://www.w3.org/2000/svg","style":{"color":"var(--blue)","height":"1.25rem","width":"1.25rem"},"children":["$","path",null,{"d":"M20.5 2C18.2034 2 16.3057 3.76662 16.0508 6H12.5C10.019 6 8 8.019 8 10.5V37.5C8 39.981 10.019 42 12.5 42H35.5C37.981 42 40 39.981 40 37.5V10.5C40 8.019 37.981 6 35.5 6H31.9492C31.6943 3.76662 29.7966 2 27.5 2H20.5ZM20.5 5H27.5C28.3465 5 29 5.6535 29 6.5C29 7.3465 28.3465 8 27.5 8H20.5C19.6535 8 19 7.3465 19 6.5C19 5.6535 19.6535 5 20.5 5ZM28.5 17.0352C29.4072 17.0352 30.3141 17.3654 30.9746 18.0254C31.6356 18.6854 32 19.564 32 20.5C32 21.436 31.6356 22.3136 30.9746 22.9746L22.4941 31.457C22.3691 31.583 22.2111 31.6737 22.0391 31.7187L17.2539 32.9687C17.1689 32.9897 17.084 33 17 33C16.738 33 16.483 32.897 16.293 32.707C16.042 32.456 15.9422 32.0901 16.0312 31.7461L17.2812 26.9629C17.3262 26.7909 17.417 26.6338 17.543 26.5078L26.0254 18.0254C26.6859 17.3654 27.5927 17.0352 28.5 17.0352Z","fill":"currentColor"}]}],"Задание"],"children":["$","div",null,{"className":"par","children":["$","p",null,{"children":["Даны ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>"}}]," отсортированных массивов. Необходимо объединить их в один отсортированный массив."]}]}]}],"$undefined",["$","$L3",null,{"title":[["$","svg",null,{"className":"icon","viewBox":"0 0 48 48","xmlns":"http://www.w3.org/2000/svg","style":{"color":"var(--yellow)","height":"1.25rem","width":"1.25rem"},"children":["$","path",null,{"d":"M42.5 8H41V6.5C41 5.671 40.328 5 39.5 5H30C27.545 5 25.369 6.191 24 8.019C22.631 6.191 20.455 5 18 5H8.5C7.672 5 7 5.671 7 6.5V8H5.5C4.672 8 4 8.672 4 9.5V40.5C4 41.328 4.672 42 5.5 42H42.5C43.328 42 44 41.328 44 40.5V9.5C44 8.672 43.328 8 42.5 8ZM10 9C10 8.44771 10.4477 8 11 8H18C20.481 8 22.5 10.019 22.5 12.5V34.5C22.5 35.329 23.172 36 24 36C24.828 36 25.5 35.329 25.5 34.5V12.5C25.5 10.019 27.519 8 30 8H37C37.5523 8 38 8.44771 38 9V35C38 35.5523 37.5523 36 37 36H30C27.574 36 25.384 37.176 24 39.032C22.616 37.176 20.426 36 18 36H11C10.4477 36 10 35.5523 10 35V9Z","fill":"currentColor"}]}],"Решение"],"children":[["$","div",null,{"className":"par","children":["$","p",null,{"children":["Пусть ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>"}}]," – максимальная из длин массивов."]}]}],["$","h1",null,{"children":"Тупое"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Можно склеить все массивы в один и отсортировать."}],["$","p",null,{"children":["Склеить массивы можно за ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(kn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">kn</span><span class=\"mclose\">)</span></span></span></span>"}}],", отсортировать за"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"$4"}}],"."]}]]}],["$","h1",null,{"children":"Обычное слияние"}],["$","div",null,{"className":"par","children":[["$","p",null,{"children":"Можно реализовать обычную процедуру слияния, где каждый шаг ищется минимум из первых элементов всех массивов, и этот минимум добавляется в результирующий массив."}],["$","p",null,{"children":["Минимум ищется за ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Theta(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>"}}],", общая временная сложность такого решения ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(kn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">kn</span><span class=\"mclose\">)</span></span></span></span>"}}]]}]]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$5"}}],["$","$L6",null,{"text":"function merge(array[array] arrays):\n    array result = []\n\n    while any in arrays != ⌀:\n        minimum, index = ∞, 0\n        for i = 0, i < length of arrays:\n            if arrays[i][0] < minimum:\n                minimum, index = arrays[i][0], i\n        \n        result.append(minimum)\n        delete arrays[index][0]\n        \n        if arrays[index] == ⌀:\n            delete arrays[index]\n            \n    return result"}]]}],["$","h1",null,{"children":"Используем двоичную кучу"}],["$","div",null,{"className":"par","children":["$","p",null,{"children":["Вместо нахождения минимального из первых элементов за"," ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Theta(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>"}}]," можно поместить эти первые элементы вместе с номерами массивов в двоичную кучу. Тогда время взятия минимума улучшится до ",["$","span",null,{"className":"math","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\log k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>"}}],"."]}]}],["$","div",null,{"className":"codeblock","children":[["$","code",null,{"className":"language-pseudocode","dangerouslySetInnerHTML":{"__html":"$7"}}],["$","$L6",null,{"text":"function merge(array[array] arrays):\n    array result = []\n    min_heap to_compare = [(a[0], i) for each a with index i in arrays]\n    \n    while to_compare != ⌀:\n        minimum, index = to_compare.extract_min()\n        \n        result.append(minimum)\n        delete arrays[index][0]\n\n        if arrays[index] != ⌀:\n            to_compare.push(arrays[index][0])\n            \n    return result"}]]}]]}]]}]}]],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cb1458b54209591a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/8a143d68bf994543.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/e1fa1c63977e8d7a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/2eb70ebb66673d82.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/a85cc6ffb2e23bf0.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","tasks","children","k-merge","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c7d54b6fa11d1a10.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/26add30ef067d5ef.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/fe2eed3e70b09d81.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/80b1c1184eed4b6a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/07ddf3913eec176a.css","precedence":"next","crossOrigin":"$undefined"}]],["$","article",null,{"children":[["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","tasks","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}],["$","div",null,{"style":{"height":"5rem"}}]]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0ae8bd05a52ca320.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ru","children":["$","body",null,{"className":"__variable_8aafdc __variable_42bd1a","children":[["$","header",null,{"children":[["$","img",null,{"src":"/icon.svg","alt":"","role":"presentation"}],["$","nav",null,{"children":[["$","$La",null,{"className":"colorless","href":"/","children":"Главная"}],["$","$La",null,{"className":"colorless","href":"/tasks","children":"Задачи"}]]}]]}],["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"error404","children":[["$","h1",null,{"children":[["$","span",null,{"children":"4"}],["$","span",null,{"children":"0"}],["$","span",null,{"children":"4"}]]}],"Без паники! Вы просто попали на несуществующую страницу."]}],"notFoundStyles":[]}]]}]}]],null],null],["$Lb",null]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Astra"}],["$","meta","3",{"name":"description","content":"..."}],["$","link","4",{"rel":"icon","href":"/icon.svg?3bdfcaa020873225","type":"image/svg+xml","sizes":"any"}]]
1:null
